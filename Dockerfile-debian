# no longer supported - just for historical pusposes.
# Use Alpine instead
FROM debian

LABEL description="FreeSWITCH Esl2Http cross-platform adapter microservice"
LABEL author=aloz

################ Build arguments ################

# The source code need to be built inside the container
ARG DIR_BUILD=/tmp/Esl2Http-build
ARG DIR_PUBLISH=/opt

ARG MICROSVC_NAME=Esl2Http
ARG MICROSVC_USER=Esl2Http

ARG DOTNET_VERSION=5.0
ARG DOTNET_INSTALL_DIR=/usr/share/dotnet

################ Build arguments ################

# Applying the latest updates
# Installing dotnet prepequesites
RUN apt-get update && \
    apt-get upgrade && \
    apt-get install --yes libssl-dev ca-certificates mc

# The user to run the microservice
RUN useradd --create-home $MICROSVC_USER

WORKDIR $DIR_BUILD

# Installing .NET SDK by the oficial Microsoft online script
# This script depends on wget as far as I see
# If the script is changed then update wget as well
ADD https://dot.net/v1/dotnet-install.sh .
RUN chmod +x dotnet-install.sh && \
    apt-get install --yes wget && \
    ./dotnet-install.sh --channel $DOTNET_VERSION --install-dir $DOTNET_INSTALL_DIR && \
    chown -R $MICROSVC_USER $DOTNET_INSTALL_DIR
ENV PATH=$PATH:$DOTNET_INSTALL_DIR

# Copying microservice sources
WORKDIR $DIR_BUILD/src/$MICROSVC_NAME
COPY $MICROSVC_NAME.sln .
COPY $MICROSVC_NAME/* $MICROSVC_NAME/
COPY $MICROSVC_NAME.Common/* $MICROSVC_NAME.Common/
COPY $MICROSVC_NAME.Dal/* $MICROSVC_NAME.Dal/
COPY $MICROSVC_NAME.Esl/* $MICROSVC_NAME.Esl/
COPY $MICROSVC_NAME.Queue/* $MICROSVC_NAME.Queue/

# Building microservice executable
# Cleanup build directory
RUN dotnet restore $MICROSVC_NAME.sln && \
    dotnet build $MICROSVC_NAME.sln -c Release -o $DIR_BUILD/build/$MICROSVC_NAME && \
    dotnet publish $MICROSVC_NAME.sln -c Release -o $DIR_PUBLISH/$MICROSVC_NAME && \
    chown -R $MICROSVC_USER $DOTNET_INSTALL_DIR && \
    rm -rf $DIR_BUILD

USER $MICROSVC_USER
ENV ESL2HTTP_ENTRYPOINT=$DIR_PUBLISH/$MICROSVC_NAME/$MICROSVC_NAME
ENTRYPOINT $ESL2HTTP_ENTRYPOINT
